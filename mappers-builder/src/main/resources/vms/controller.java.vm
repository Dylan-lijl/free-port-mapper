#set($hasStateColumn = false)
#set($clientInfo = ${entity})
#set($clientInfoCamel = ${entity.substring(0, 1).toLowerCase()}+${entity.substring(1)})
#set($serviceVar = ${table.serviceName.substring(0, 1).toLowerCase()}+${table.serviceName.substring(1)})
#set($clientInfoDesc = $!{table.comment}+"")
#foreach($field in $table.fields)
    #if($field.propertyName == 'state')
        #set($hasStateColumn = true)
        #break
    #end
#end
package ${package.Controller};
import io.swagger.annotations.Api;
import pub.carzy.free_port_mapper.common.basic.CreateResponse;
import pub.carzy.free_port_mapper.common.basic.UpdateResponse;
import ${cfg.parent}.dto.request.List${clientInfo}Request;
import ${cfg.parent}.dto.request.Info${clientInfo}Request;
import ${cfg.parent}.dto.request.Create${clientInfo}Request;
import ${cfg.parent}.dto.request.Update${clientInfo}Request;
import ${cfg.parent}.dto.request.Delete${clientInfo}Request;
#if(${table.hasStateColumn})
import ${cfg.parent}.dto.request.Update${clientInfo}StateRequest;
#end
import ${cfg.parent}.dto.response.Info${clientInfo}Response;
import ${cfg.parent}.dto.response.List${clientInfo}Response;
import ${package.Service}.${table.serviceName};
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import pub.carzy.free_port_mapper.common.api.CommonPage;
import pub.carzy.free_port_mapper.common.api.CommonResult;

import javax.annotation.Resource;
import javax.validation.Valid;

/**
 * ${clientInfoDesc} 前端控制器
 * @author ${author}
 * @since ${date}
 */
@RestController
@RequestMapping("/${clientInfoCamel}")
@Api(tags = "${clientInfoDesc}", description = "${clientInfoDesc}")
public class ${table.controllerName} {
    @Resource
    private ${table.serviceName} ${serviceVar};

    @PostMapping("/list")
    @ApiOperation("${clientInfoDesc}列表")
    public CommonResult<CommonPage<List${clientInfo}Response>> ${clientInfoCamel}List(@Valid @RequestBody List${clientInfo}Request request){
            CommonPage<List${clientInfo}Response> response= ${serviceVar}.pageList(request);
            return CommonResult.success(response);
    }

    @PostMapping("/info")
    @ApiOperation("${clientInfoDesc}详情")
    public CommonResult<Info${clientInfo}Response> ${clientInfoCamel}Info(@Valid @RequestBody Info${clientInfo}Request request){
        Info${clientInfo}Response response= ${serviceVar}.infoData(request);
        return CommonResult.success(response);
    }

    @PostMapping("/create")
    @ApiOperation("创建${clientInfoDesc}")
    public CommonResult<CreateResponse<Integer>> ${clientInfoCamel}Create(@Valid @RequestBody Create${clientInfo}Request request){
        CreateResponse<Integer> response= ${serviceVar}.createData(request);
        return CommonResult.successCreate(response);
    }

    @PostMapping("/update")
    @ApiOperation("更新${clientInfoDesc}")
    public CommonResult<UpdateResponse> ${clientInfoCamel}Update(@Valid @RequestBody Update${clientInfo}Request request){
        UpdateResponse response= ${serviceVar}.updateData(request);
        return CommonResult.successUpdate(response);
    }

    @PostMapping("/delete")
    @ApiOperation("删除${clientInfoDesc}")
    public CommonResult<Void> ${clientInfoCamel}Delete(@Valid @RequestBody Delete${clientInfo}Request request) {
        ${serviceVar}.deleteData(request);
        return CommonResult.successDelete();
    }

    #if(${table.hasStateColumn})
    @PostMapping("/state")
    @ApiOperation("更新${clientInfoDesc}状态")
    public CommonResult<Void> ${clientInfoCamel}UpdateState(@Valid @RequestBody Update${clientInfo}StateRequest request) {
        ${serviceVar}.updateStateData(request);
        return CommonResult.successUpdate();
    }
    #end
}
